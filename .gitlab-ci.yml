image: docker:latest

variables:
  DEBIAN_RELEASE: "bullseye"
  DEBIAN_BASE_IMAGE: "bullseye-20200908-slim"

  # container version
  DEBIAN_MAJOR: "2"
  DEBIAN_MINOR: "1"
  DEBIAN_PATCH: "1"

  DEBIAN_SHELL_MAJOR: "2"
  DEBIAN_SHELL_MINOR: "1"
  DEBIAN_SHELL_PATCH: "1"

  DOCKER_COMPOSE_MAJOR: "2"
  DOCKER_COMPOSE_MINOR: "1"
  DOCKER_COMPOSE_PATCH: "1"

  WAYLAND_BASE_MAJOR: "2"
  WAYLAND_BASE_MINOR: "1"
  WAYLAND_BASE_PATCH: "1"

  WESTON_MAJOR: "2"
  WESTON_MINOR: "2"
  WESTON_PATCH: "0"

  QT5_WAYLAND_MAJOR: "2"
  QT5_WAYLAND_MINOR: "2"
  QT5_WAYLAND_PATCH: "2"

  QT5_WAYLAND_EXAMPLES_MAJOR: "2"
  QT5_WAYLAND_EXAMPLES_MINOR: "2"
  QT5_WAYLAND_EXAMPLES_PATCH: "2"

  WAYLAND_BASE_VIVANTE_MAJOR: "2"
  WAYLAND_BASE_VIVANTE_MINOR: "1"
  WAYLAND_BASE_VIVANTE_PATCH: "2"

  WESTON_VIVANTE_MAJOR: "2"
  WESTON_VIVANTE_MINOR: "2"
  WESTON_VIVANTE_PATCH: "0"

  QT5_WAYLAND_VIVANTE_MAJOR: "2"
  QT5_WAYLAND_VIVANTE_MINOR: "2"
  QT5_WAYLAND_VIVANTE_PATCH: "3"

  QT5_WAYLAND_EXAMPLES_VIVANTE_MAJOR: "2"
  QT5_WAYLAND_EXAMPLES_VIVANTE_MINOR: "2"
  QT5_WAYLAND_EXAMPLES_VIVANTE_PATCH: "3"

  WESTON_TOUCH_CALIBRATOR_MAJOR: "2"
  WESTON_TOUCH_CALIBRATOR_MINOR: "1"
  WESTON_TOUCH_CALIBRATOR_PATCH: "0"

  GRAPHICS_TESTS_MAJOR: "2"
  GRAPHICS_TESTS_MINOR: "1"
  GRAPHICS_TESTS_PATCH: "0"

  GRAPHICS_TESTS_VIVANTE_MAJOR: "2"
  GRAPHICS_TESTS_VIVANTE_MINOR: "0"
  GRAPHICS_TESTS_VIVANTE_PATCH: "0"

  # This should be set by docker image already, just to be sure...
  DOCKER_HOST: tcp://docker:2375
  # Use overlayfs driver for better performance
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  GITLAB_DOCKERREGISTRY_SUFFIX: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
  GITLAB_DOCKERREGISTRY_SUFFIX_LATEST: ${CI_COMMIT_REF_SLUG}-latest

services:
  - name: docker:dind

before_script:
  - docker info

stages:
  - build-base
  - build-stage1
  - build-stage2
  - build-stage3
  - build-multiarch
  - deploy-major
  - deploy-minor
  - deploy-patch
  - deploy-patch-date
  - deploy-multiarch-major
  - deploy-multiarch-minor
  - deploy-multiarch-patch
  - deploy-multiarch-patch-date

# Docker image builds
#
# Build the Docker images  specificd in DOCKERFILE_FOLDER/IMAGE_NAME and push
# it to Gitlab's internal Docker registry
.docker-build:
  variables:
    IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
    IMAGE_ARCH: linux/arm
    ADD_TORADEX_REPOSITORY: 1
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if test -n "${BASE_NAME}"; then docker pull ${CI_REGISTRY_IMAGE}/${BASE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} && docker tag ${CI_REGISTRY_IMAGE}/${BASE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} torizon/${BASE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND} ; fi || exit 1
    # Try to download latest image for cache, but don't fail if it does not exist
    - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} || true
    - docker pull ${CI_REGISTRY}/rd/torizon-core-containers/debian-docker-images/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} || true
    - export DATE=$(date +%Y%m%d)
    - docker build --build-arg IMAGE_ARCH=${IMAGE_ARCH}
                     --build-arg DOCKER_REGISTRY=${CI_REGISTRY_IMAGE}
                     --build-arg BASE_NAME=${BASE_NAME}
                     --build-arg IMAGE_TAG=${IMAGE_TAG}
                     --build-arg ADD_TORADEX_REPOSITORY=${ADD_TORADEX_REPOSITORY}
                     --build-arg ACCEPT_FSL_EULA=${ACCEPT_FSL_EULA}
                     --build-arg QT5_EXAMPLES_DEBIAN=${QT5_EXAMPLES_DEBIAN}
                     --cache-from ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}
                     --cache-from ${CI_REGISTRY}/rd/torizon-core-containers/debian-docker-images/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}
                     ${DOCKER_NO_CACHE:+--no-cache}
                     --label container.name=${IMAGE_NAME} 
                     --label container.version=${MAJOR}.${MINOR}.${PATCH}-${DATE} 
                     --label git.branch=${CI_COMMIT_BRANCH}  
                     --label git.hash=${CI_COMMIT_SHA} 
                     --label pipeline.id=${CI_PIPELINE_ID} 
                     -f ${DOCKERFILE_FOLDER}Dockerfile
                     -t ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
                     -t ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}
                     ${DOCKERFILE_FOLDER}
    - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
    - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}

docker-build-base:
  extends: .docker-build
  before_script:
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    IMAGE_TAG: ${DEBIAN_BASE_IMAGE}
    IMAGE_ARCH: linux/arm/v7
    IMAGE_NAME: arm32v7-debian-base
    DOCKERFILE_FOLDER: "base/"
  stage: build-base

docker-build-wayland-base:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${WAYLAND_BASE_MAJOR}"
    - export MINOR="${WAYLAND_BASE_MINOR}"
    - export PATCH="${WAYLAND_BASE_PATCH}"
  variables:
    BASE_NAME: arm32v7-debian-base
    IMAGE_NAME: arm32v7-debian-wayland-base
    DOCKERFILE_FOLDER: "wayland-base/"
  stage: build-stage1

docker-build-weston:
  extends: .docker-build
  before_script:
    - export MAJOR="${WESTON_MAJOR}"
    - export MINOR="${WESTON_MINOR}"
    - export PATCH="${WESTON_PATCH}"
    - ./weston/make_feature_map.sh
  variables:
    BASE_NAME: arm32v7-debian-wayland-base
    IMAGE_NAME: weston
    DOCKERFILE_FOLDER: "weston/"
  stage: build-stage2

docker-build-graphics-tests:
  extends: .docker-build
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_MINOR}"
    - export PATCH="${GRAPHICS_TESTS_PATCH}"
  variables:
    BASE_NAME: arm32v7-debian-wayland-base
    IMAGE_NAME: graphics-tests
    DOCKERFILE_FOLDER: "graphics-tests/"
  stage: build-stage2

docker-build-weston-touch-calibrator:
  extends: .docker-build
  before_script:
    - export MAJOR="${WESTON_TOUCH_CALIBRATOR_MAJOR}"
    - export MINOR="${WESTON_TOUCH_CALIBRATOR_MINOR}"
    - export PATCH="${WESTON_TOUCH_CALIBRATOR_PATCH}"
  variables:
    BASE_NAME: weston
    IMAGE_NAME: weston-touch-calibrator
    DOCKERFILE_FOLDER: "weston-touch-calibrator/"
  stage: build-stage3

docker-build-shell:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"
    - export MINOR="${DEBIAN_SHELL_MINOR}"
    - export PATCH="${DEBIAN_SHELL_PATCH}"
  variables:
    BASE_NAME: arm32v7-debian-base
    IMAGE_NAME: arm32v7-debian-shell
    DOCKERFILE_FOLDER: "shell/"
  stage: build-stage1

docker-build-compose:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"
    - export MINOR="${DOCKER_COMPOSE_MINOR}"
    - export PATCH="${DOCKER_COMPOSE_PATCH}"
  variables:
    BASE_NAME: arm32v7-debian-base
    IMAGE_NAME: arm32v7-debian-docker-compose
    DOCKERFILE_FOLDER: "docker-compose/"
  stage: build-stage1

docker-build-qt5-wayland:
  extends: .docker-build
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"
    - export MINOR="${QT5_WAYLAND_MINOR}"
    - export PATCH="${QT5_WAYLAND_PATCH}"
  variables:
    BASE_NAME: arm32v7-debian-wayland-base
    IMAGE_NAME: arm32v7-debian-qt5-wayland
    DOCKERFILE_FOLDER: "qt5-wayland/"
  stage: build-stage2

docker-build-qt5-wayland-examples:
  extends: .docker-build
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"
  variables:
    BASE_NAME: arm32v7-debian-qt5-wayland
    IMAGE_NAME: arm32v7-debian-qt5-wayland-examples
    QT5_EXAMPLES_DEBIAN: 1
    DOCKERFILE_FOLDER: "qt5-wayland-examples/"
  stage: build-stage3

docker-build-base-arm64v8:
  extends: .docker-build
  before_script:
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    IMAGE_TAG: ${DEBIAN_BASE_IMAGE}
    IMAGE_ARCH: linux/arm64/v8
    IMAGE_NAME: arm64v8-debian-base
    DOCKERFILE_FOLDER: "base/"
  stage: build-base

docker-build-wayland-base-arm64v8:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${WAYLAND_BASE_MAJOR}"
    - export MINOR="${WAYLAND_BASE_MINOR}"
    - export PATCH="${WAYLAND_BASE_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: arm64v8-debian-base
    IMAGE_NAME: arm64v8-debian-wayland-base
    DOCKERFILE_FOLDER: "wayland-base/"
  stage: build-stage1

docker-build-wayland-base-vivante:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${WAYLAND_BASE_VIVANTE_MAJOR}"
    - export MINOR="${WAYLAND_BASE_VIVANTE_MINOR}"
    - export PATCH="${WAYLAND_BASE_VIVANTE_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: arm64v8-debian-base
    IMAGE_NAME: wayland-base-vivante
    ACCEPT_FSL_EULA: 1
    DOCKERFILE_FOLDER: "wayland-base-vivante/"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_VIVANTE}
  stage: build-stage1

docker-build-weston-vivante:
  extends: .docker-build
  before_script:
    - export MAJOR="${WESTON_VIVANTE_MAJOR}"
    - export MINOR="${WESTON_VIVANTE_MINOR}"
    - export PATCH="${WESTON_VIVANTE_PATCH}"
    - ./weston/make_feature_map.sh
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: wayland-base-vivante
    IMAGE_NAME: weston-vivante
    ACCEPT_FSL_EULA: 1
    DOCKERFILE_FOLDER: "weston/"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_VIVANTE}
  stage: build-stage2

docker-build-graphics-tests-vivante:
  extends: .docker-build
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_VIVANTE_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_VIVANTE_MINOR}"
    - export PATCH="${GRAPHICS_TESTS_VIVANTE_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: wayland-base-vivante
    IMAGE_NAME: graphics-tests-vivante
    DOCKERFILE_FOLDER: "graphics-tests-vivante/"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_VIVANTE}
  stage: build-stage2

docker-build-shell-arm64v8:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"
    - export MINOR="${DEBIAN_SHELL_MINOR}"
    - export PATCH="${DEBIAN_SHELL_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64 
    BASE_NAME: arm64v8-debian-base
    IMAGE_NAME: arm64v8-debian-shell
    DOCKERFILE_FOLDER: "shell/"
  stage: build-stage1

docker-build-compose-arm64v8:
  extends: .docker-build
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"
    - export MINOR="${DOCKER_COMPOSE_MINOR}"
    - export PATCH="${DOCKER_COMPOSE_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: arm64v8-debian-base
    IMAGE_NAME: arm64v8-debian-docker-compose
    DOCKERFILE_FOLDER: "docker-compose/"
  stage: build-stage1

docker-build-qt5-wayland-arm64v8:
  extends: .docker-build
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"
    - export MINOR="${QT5_WAYLAND_MINOR}"
    - export PATCH="${QT5_WAYLAND_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: arm64v8-debian-wayland-base
    IMAGE_NAME: arm64v8-debian-qt5-wayland
    DOCKERFILE_FOLDER: "qt5-wayland/"
  stage: build-stage2

docker-build-qt5-wayland-examples-arm64v8:
  extends: .docker-build
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: arm64v8-debian-qt5-wayland
    IMAGE_NAME: arm64v8-debian-qt5-wayland-examples
    QT5_EXAMPLES_DEBIAN: 1
    DOCKERFILE_FOLDER: "qt5-wayland-examples/"
  stage: build-stage3

docker-build-qt5-wayland-vivante:
  extends: .docker-build
  before_script:
    - export MAJOR="${QT5_WAYLAND_VIVANTE_MAJOR}"
    - export MINOR="${QT5_WAYLAND_VIVANTE_MINOR}"
    - export PATCH="${QT5_WAYLAND_VIVANTE_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: wayland-base-vivante
    IMAGE_NAME: qt5-wayland-vivante
    DOCKERFILE_FOLDER: "qt5-wayland/"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_VIVANTE}
  stage: build-stage2

docker-build-qt5-wayland-vivante-examples:
  extends: .docker-build
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MAJOR}"
    - export MINOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MINOR}"
    - export PATCH="${QT5_WAYLAND_EXAMPLES_VIVANTE_PATCH}"
  variables:
    IMAGE_ARCH: linux/arm64
    BASE_NAME: qt5-wayland-vivante
    IMAGE_NAME: qt5-wayland-examples-vivante
    QT5_EXAMPLES_DEBIAN: 1
    DOCKERFILE_FOLDER: "qt5-wayland-examples/"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_VIVANTE}
  stage: build-stage3

# Enable experimental features in Docker client (experimental feature are needed for manifest)
.do_docker_experimental: &do_docker_experimental
    - mkdir -p $HOME/.docker
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker version

.docker-build-multiarch:
  before_script:
    - *do_docker_experimental
    - rm -rf ~/.docker/manifests/*
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_32}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_64}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker manifest create ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_32}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_64}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker manifest annotate ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_32}:${GITLAB_DOCKERREGISTRY_SUFFIX}  --os linux --arch arm
  - docker manifest annotate ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_64}:${GITLAB_DOCKERREGISTRY_SUFFIX}  --os linux --arch arm64
  - docker manifest inspect -v ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}
  - docker manifest push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}
  
docker-build-base-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: base
    IMAGE_NAME_32: arm32v7-debian-base
    IMAGE_NAME_64: arm64v8-debian-base
  stage: build-multiarch
  
docker-build-wayland-base-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: wayland-base
    IMAGE_NAME_32: arm32v7-debian-wayland-base
    IMAGE_NAME_64: arm64v8-debian-wayland-base
  stage: build-multiarch

docker-build-shell-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: shell
    IMAGE_NAME_32: arm32v7-debian-shell
    IMAGE_NAME_64: arm64v8-debian-shell
  stage: build-multiarch

docker-build-docker-compose-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: docker-compose
    IMAGE_NAME_32: arm32v7-debian-docker-compose
    IMAGE_NAME_64: arm64v8-debian-docker-compose
  stage: build-multiarch
  
docker-build-qt5-wayland-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: qt5-wayland
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland
  stage: build-multiarch
  
docker-build-qt5-wayland-examples-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: qt5-wayland-examples
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland-examples
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland-examples
  stage: build-multiarch

# Docker deploy jobs
#
# Make sure DOCKER_HUB_USER/DOCKER_HUB_PW is properly set in the project
# specific Gitlab CI settings.
.docker-deploy-major:
  when: manual
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker push --all-tags ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}
  
docker-deploy-base-major:
  extends: .docker-deploy-major
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
  variables:
    IMAGE_NAME: arm32v7-debian-base
  stage: deploy-major

docker-deploy-wayland-base-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
  variables:
    IMAGE_NAME: arm32v7-debian-wayland-base
  stage: deploy-major
  
docker-deploy-weston-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${WESTON_MAJOR}"    
  variables:
    IMAGE_NAME: weston
  stage: deploy-major    

docker-deploy-graphics-tests-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_MAJOR}"
  variables:
    IMAGE_NAME: graphics-tests
  stage: deploy-major

docker-deploy-weston-touch-calibrator-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${WESTON_TOUCH_CALIBRATOR_MAJOR}"
  variables:
    IMAGE_NAME: weston-touch-calibrator
  stage: deploy-major

docker-deploy-shell-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-shell
  stage: deploy-major
  
docker-deploy-docker-compose-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-docker-compose
  stage: deploy-major
  
docker-deploy-qt5-wayland-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland
  stage: deploy-major
  
docker-deploy-qt5-wayland-examples-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland-examples
  stage: deploy-major
  
docker-deploy-base-arm64v8-major:
  extends: .docker-deploy-major
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-base
  stage: deploy-major
  
docker-deploy-wayland-base-arm64v8-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
  variables:
    IMAGE_NAME: arm64v8-debian-wayland-base
  stage: deploy-major
  
docker-deploy-wayland-base-vivante-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${WAYLAND_BASE_VIVANTE_MAJOR}"   
  variables:
    IMAGE_NAME: wayland-base-vivante
  stage: deploy-major
  
docker-deploy-weston-vivante-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${WESTON_VIVANTE_MAJOR}"    
  variables:
    IMAGE_NAME: weston-vivante
  stage: deploy-major

docker-deploy-graphics-tests-vivante-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_VIVANTE_MAJOR}"
  variables:
    IMAGE_NAME: graphics-tests-vivante
  stage: deploy-major

docker-deploy-shell-arm64v8-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-shell
  stage: deploy-major
  
docker-deploy-docker-compose-arm64v8-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-docker-compose
  stage: deploy-major
  
docker-deploy-qt5-wayland-arm64v8-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland
  stage: deploy-major
  
docker-deploy-qt5-wayland-vivante-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_VIVANTE_MAJOR}"    
  variables:
    IMAGE_NAME: qt5-wayland-vivante
  stage: deploy-major
  
docker-deploy-qt5-wayland-examples-arm64v8-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland-examples
  stage: deploy-major
  
docker-deploy-qt5-wayland-examples-vivante-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MAJOR}"    
  variables:
    IMAGE_NAME: qt5-wayland-examples-vivante
  stage: deploy-major

.docker-deploy-minor:
  when: manual
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker push --all-tags ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}
  
docker-deploy-base-minor:
  extends: .docker-deploy-minor
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
  variables:
    IMAGE_NAME: arm32v7-debian-base
  stage: deploy-minor    

docker-deploy-wayland-base-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_MINOR}"  
  variables:
    IMAGE_NAME: arm32v7-debian-wayland-base
  stage: deploy-minor
  
docker-deploy-weston-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${WESTON_MAJOR}"  
    - export MINOR="${WESTON_MINOR}"    
  variables:
    IMAGE_NAME: weston
  stage: deploy-minor

docker-deploy-graphics-tests-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_MINOR}"
  variables:
    IMAGE_NAME: graphics-tests
  stage: deploy-minor

docker-deploy-weston-touch-calibrator-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${WESTON_TOUCH_CALIBRATOR_MAJOR}"
    - export MINOR="${WESTON_TOUCH_CALIBRATOR_MINOR}"
  variables:
    IMAGE_NAME: weston-touch-calibrator
  stage: deploy-minor

docker-deploy-shell-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"   
    - export MINOR="${DEBIAN_SHELL_MINOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-shell
  stage: deploy-minor
  
docker-deploy-docker-compose-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"  
    - export MINOR="${DOCKER_COMPOSE_MINOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-docker-compose
  stage: deploy-minor
  
docker-deploy-qt5-wayland-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"    
    - export MINOR="${QT5_WAYLAND_MINOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland
  stage: deploy-minor
  
docker-deploy-qt5-wayland-examples-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}" 
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland-examples
  stage: deploy-minor
  
docker-deploy-base-arm64v8-minor:
  extends: .docker-deploy-minor
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"   
    - export MINOR="${DEBIAN_MINOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-base
  stage: deploy-minor
  
docker-deploy-wayland-base-arm64v8-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_MINOR}"  
  variables:
    IMAGE_NAME: arm64v8-debian-wayland-base
  stage: deploy-minor
  
docker-deploy-wayland-base-vivante-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${WAYLAND_BASE_VIVANTE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_VIVANTE_MINOR}"   
  variables:
    IMAGE_NAME: wayland-base-vivante
  stage: deploy-minor
  
docker-deploy-weston-vivante-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${WESTON_VIVANTE_MAJOR}"
    - export MINOR="${WESTON_VIVANTE_MINOR}"
  variables:
    IMAGE_NAME: weston-vivante
  stage: deploy-minor

docker-deploy-graphics-tests-vivante-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_VIVANTE_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_VIVANTE_MINOR}"
  variables:
    IMAGE_NAME: graphics-tests-vivante
  stage: deploy-minor

docker-deploy-shell-arm64v8-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"  
    - export MINOR="${DEBIAN_SHELL_MINOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-shell
  stage: deploy-minor
  
docker-deploy-docker-compose-arm64v8-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"    
    - export MINOR="${DOCKER_COMPOSE_MINOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-docker-compose
  stage: deploy-minor
  
docker-deploy-qt5-wayland-arm64v8-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"  
    - export MINOR="${QT5_WAYLAND_MINOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland
  stage: deploy-minor
  
docker-deploy-qt5-wayland-vivante-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_VIVANTE_MAJOR}"    
    - export MINOR="${QT5_WAYLAND_VIVANTE_MINOR}"    
  variables:
    IMAGE_NAME: qt5-wayland-vivante
  stage: deploy-minor
  
docker-deploy-qt5-wayland-examples-arm64v8-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"   
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland-examples
  stage: deploy-minor
  
docker-deploy-qt5-wayland-examples-vivante-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MAJOR}" 
    - export MINOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MINOR}"    
  variables:
    IMAGE_NAME: qt5-wayland-examples-vivante
  stage: deploy-minor

.docker-deploy-patch:
  when: manual
  script:
  - *do_docker_experimental
  - docker manifest inspect ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} > /dev/null && true; RESULT=$?
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - (if [ ${RESULT} == 1 ] ; then docker push --all-tags ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME} ; else echo Image with this tag already exists. ; fi)

docker-deploy-base-patch:
  extends: .docker-deploy-patch
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    IMAGE_NAME: arm32v7-debian-base
  stage: deploy-patch

docker-deploy-wayland-base-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_MINOR}"  
    - export PATCH="${WAYLAND_BASE_PATCH}"  
  variables:
    IMAGE_NAME: arm32v7-debian-wayland-base
  stage: deploy-patch

docker-deploy-weston-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${WESTON_MAJOR}"  
    - export MINOR="${WESTON_MINOR}"
    - export PATCH="${WESTON_PATCH}"    
  variables:
    IMAGE_NAME: weston
  stage: deploy-patch

docker-deploy-graphics-tests-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_MINOR}"
    - export PATCH="${GRAPHICS_TESTS_PATCH}"
  variables:
    IMAGE_NAME: graphics-tests
  stage: deploy-patch

docker-deploy-weston-touch-calibrator-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${WESTON_TOUCH_CALIBRATOR_MAJOR}"
    - export MINOR="${WESTON_TOUCH_CALIBRATOR_MINOR}"
    - export PATCH="${WESTON_TOUCH_CALIBRATOR_PATCH}"
  variables:
    IMAGE_NAME: weston-touch-calibrator
  stage: deploy-patch

docker-deploy-shell-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"   
    - export MINOR="${DEBIAN_SHELL_MINOR}"    
    - export PATCH="${DEBIAN_SHELL_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-shell
  stage: deploy-patch

docker-deploy-docker-compose-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"  
    - export MINOR="${DOCKER_COMPOSE_MINOR}"  
    - export PATCH="${DOCKER_COMPOSE_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-docker-compose
  stage: deploy-patch

docker-deploy-qt5-wayland-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"    
    - export MINOR="${QT5_WAYLAND_MINOR}"  
    - export PATCH="${QT5_WAYLAND_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland
  stage: deploy-patch

docker-deploy-qt5-wayland-examples-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}" 
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"  
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland-examples
  stage: deploy-patch

docker-deploy-base-arm64v8-patch:
  extends: .docker-deploy-patch
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"   
    - export MINOR="${DEBIAN_MINOR}"    
    - export PATCH="${DEBIAN_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-base
  stage: deploy-patch

docker-deploy-wayland-base-arm64v8-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_MINOR}"  
    - export PATCH="${WAYLAND_BASE_PATCH}"  
  variables:
    IMAGE_NAME: arm64v8-debian-wayland-base
  stage: deploy-patch

docker-deploy-wayland-base-vivante-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${WAYLAND_BASE_VIVANTE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_VIVANTE_MINOR}"   
    - export PATCH="${WAYLAND_BASE_VIVANTE_PATCH}"   
  variables:
    IMAGE_NAME: wayland-base-vivante
  stage: deploy-patch

docker-deploy-weston-vivante-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${WESTON_VIVANTE_MAJOR}"    
    - export MINOR="${WESTON_VIVANTE_MINOR}" 
    - export PATCH="${WESTON_VIVANTE_PATCH}"    
  variables:
    IMAGE_NAME: weston-vivante
  stage: deploy-patch

docker-deploy-graphics-tests-vivante-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_VIVANTE_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_VIVANTE_MINOR}"
    - export PATCH="${GRAPHICS_TESTS_VIVANTE_PATCH}"
  variables:
    IMAGE_NAME: graphics-tests-vivante
  stage: deploy-patch

docker-deploy-shell-arm64v8-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"  
    - export MINOR="${DEBIAN_SHELL_MINOR}" 
    - export PATCH="${DEBIAN_SHELL_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-shell
  stage: deploy-patch

docker-deploy-docker-compose-arm64v8-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"    
    - export MINOR="${DOCKER_COMPOSE_MINOR}" 
    - export PATCH="${DOCKER_COMPOSE_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-docker-compose
  stage: deploy-patch

docker-deploy-qt5-wayland-arm64v8-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"  
    - export MINOR="${QT5_WAYLAND_MINOR}"   
    - export PATCH="${QT5_WAYLAND_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland
  stage: deploy-patch

docker-deploy-qt5-wayland-vivante-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_VIVANTE_MAJOR}"    
    - export MINOR="${QT5_WAYLAND_VIVANTE_MINOR}"  
    - export PATCH="${QT5_WAYLAND_VIVANTE_PATCH}"    
  variables:
    IMAGE_NAME: qt5-wayland-vivante
  stage: deploy-patch

docker-deploy-qt5-wayland-examples-arm64v8-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"   
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}" 
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland-examples
  stage: deploy-patch

docker-deploy-qt5-wayland-examples-vivante-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MAJOR}" 
    - export MINOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MINOR}"   
    - export PATCH="${QT5_WAYLAND_EXAMPLES_VIVANTE_PATCH}"    
  variables:
    IMAGE_NAME: qt5-wayland-examples-vivante
  stage: deploy-patch

.docker-deploy-patch-date:
  when: manual
  script:
  - *do_docker_experimental
  - export DATE=$(date +%Y%m%d)
  - docker manifest inspect ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} > /dev/null && true; RESULT=$?
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - (if [ ${RESULT} == 1 ] ; then docker push --all-tags ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME} ; else echo Image with this tag already exists. ; fi)

docker-deploy-base-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    IMAGE_NAME: arm32v7-debian-base
  stage: deploy-patch-date

docker-deploy-wayland-base-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_MINOR}"  
    - export PATCH="${WAYLAND_BASE_PATCH}"  
  variables:
    IMAGE_NAME: arm32v7-debian-wayland-base
  stage: deploy-patch-date

docker-deploy-weston-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${WESTON_MAJOR}"  
    - export MINOR="${WESTON_MINOR}"
    - export PATCH="${WESTON_PATCH}"    
  variables:
    IMAGE_NAME: weston
  stage: deploy-patch-date

docker-deploy-graphics-tests-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_MINOR}"
    - export PATCH="${GRAPHICS_TESTS_PATCH}"
  variables:
    IMAGE_NAME: graphics-tests
  stage: deploy-patch-date

docker-deploy-weston-touch-calibrator-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${WESTON_TOUCH_CALIBRATOR_MAJOR}"
    - export MINOR="${WESTON_TOUCH_CALIBRATOR_MINOR}"
    - export PATCH="${WESTON_TOUCH_CALIBRATOR_PATCH}"
  variables:
    IMAGE_NAME: weston-touch-calibrator
  stage: deploy-patch-date

docker-deploy-shell-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"   
    - export MINOR="${DEBIAN_SHELL_MINOR}"    
    - export PATCH="${DEBIAN_SHELL_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-shell
  stage: deploy-patch-date

docker-deploy-docker-compose-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"  
    - export MINOR="${DOCKER_COMPOSE_MINOR}"  
    - export PATCH="${DOCKER_COMPOSE_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-docker-compose
  stage: deploy-patch-date

docker-deploy-qt5-wayland-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"    
    - export MINOR="${QT5_WAYLAND_MINOR}"  
    - export PATCH="${QT5_WAYLAND_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland
  stage: deploy-patch-date

docker-deploy-qt5-wayland-examples-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}" 
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"  
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"    
  variables:
    IMAGE_NAME: arm32v7-debian-qt5-wayland-examples
  stage: deploy-patch-date

docker-deploy-base-arm64v8-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"   
    - export MINOR="${DEBIAN_MINOR}"    
    - export PATCH="${DEBIAN_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-base
  stage: deploy-patch-date

docker-deploy-wayland-base-arm64v8-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_MINOR}"  
    - export PATCH="${WAYLAND_BASE_PATCH}"  
  variables:
    IMAGE_NAME: arm64v8-debian-wayland-base
  stage: deploy-patch-date

docker-deploy-wayland-base-vivante-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${WAYLAND_BASE_VIVANTE_MAJOR}"  
    - export MINOR="${WAYLAND_BASE_VIVANTE_MINOR}"   
    - export PATCH="${WAYLAND_BASE_VIVANTE_PATCH}"   
  variables:
    IMAGE_NAME: wayland-base-vivante
  stage: deploy-patch-date

docker-deploy-weston-vivante-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${WESTON_VIVANTE_MAJOR}"    
    - export MINOR="${WESTON_VIVANTE_MINOR}" 
    - export PATCH="${WESTON_VIVANTE_PATCH}"    
  variables:
    IMAGE_NAME: weston-vivante
  stage: deploy-patch-date

docker-deploy-graphics-tests-vivante-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${GRAPHICS_TESTS_VIVANTE_MAJOR}"
    - export MINOR="${GRAPHICS_TESTS_VIVANTE_MINOR}"
    - export PATCH="${GRAPHICS_TESTS_VIVANTE_PATCH}"
  variables:
    IMAGE_NAME: graphics-tests-vivante
  stage: deploy-patch-date

docker-deploy-shell-arm64v8-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"  
    - export MINOR="${DEBIAN_SHELL_MINOR}" 
    - export PATCH="${DEBIAN_SHELL_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-shell
  stage: deploy-patch-date

docker-deploy-docker-compose-arm64v8-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"    
    - export MINOR="${DOCKER_COMPOSE_MINOR}" 
    - export PATCH="${DOCKER_COMPOSE_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-docker-compose
  stage: deploy-patch-date

docker-deploy-qt5-wayland-arm64v8-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"  
    - export MINOR="${QT5_WAYLAND_MINOR}"   
    - export PATCH="${QT5_WAYLAND_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland
  stage: deploy-patch-date

docker-deploy-qt5-wayland-vivante-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_VIVANTE_MAJOR}"    
    - export MINOR="${QT5_WAYLAND_VIVANTE_MINOR}"  
    - export PATCH="${QT5_WAYLAND_VIVANTE_PATCH}"    
  variables:
    IMAGE_NAME: qt5-wayland-vivante
  stage: deploy-patch-date

docker-deploy-qt5-wayland-examples-arm64v8-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"   
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}" 
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"    
  variables:
    IMAGE_NAME: arm64v8-debian-qt5-wayland-examples
  stage: deploy-patch-date

docker-deploy-qt5-wayland-examples-vivante-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MAJOR}" 
    - export MINOR="${QT5_WAYLAND_EXAMPLES_VIVANTE_MINOR}"   
    - export PATCH="${QT5_WAYLAND_EXAMPLES_VIVANTE_PATCH}"    
  variables:
    IMAGE_NAME: qt5-wayland-examples-vivante
  stage: deploy-patch-date

.docker-deploy-multiarch-major:
  when: manual    
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}${DEBIAN_RELEASE_APPEND}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}${DEBIAN_RELEASE_APPEND}  --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}${DEBIAN_RELEASE_APPEND}  --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND}
  - docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}${DEBIAN_RELEASE_APPEND}
  
docker-deploy-base-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
  variables:
    IMAGE_NAME: debian
    IMAGE_NAME_32: arm32v7-debian-base
    IMAGE_NAME_64: arm64v8-debian-base
  stage: deploy-multiarch-major
  
docker-deploy-wayland-base-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"
  variables:
    IMAGE_NAME: wayland-base
    IMAGE_NAME_32: arm32v7-debian-wayland-base
    IMAGE_NAME_64: arm64v8-debian-wayland-base
  stage: deploy-multiarch-major

docker-deploy-shell-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"
  variables:
    IMAGE_NAME: debian-shell
    IMAGE_NAME_32: arm32v7-debian-shell
    IMAGE_NAME_64: arm64v8-debian-shell
  stage: deploy-multiarch-major

docker-deploy-docker-compose-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"
  variables:
    IMAGE_NAME: docker-compose
    IMAGE_NAME_32: arm32v7-debian-docker-compose
    IMAGE_NAME_64: arm64v8-debian-docker-compose
  stage: deploy-multiarch-major
  
docker-deploy-qt5-wayland-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"
  variables:
    IMAGE_NAME: qt5-wayland
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland
  stage: deploy-multiarch-major
  
docker-deploy-qt5-wayland-examples-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"
  variables:
    IMAGE_NAME: qt5-wayland-examples
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland-examples
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland-examples
  stage: deploy-multiarch-major

.docker-deploy-multiarch-minor:
  when: manual    
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND}  --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND}  --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND}
  - docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}${DEBIAN_RELEASE_APPEND}
  
docker-deploy-base-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
  variables:
    IMAGE_NAME: debian
    IMAGE_NAME_32: arm32v7-debian-base
    IMAGE_NAME_64: arm64v8-debian-base
  stage: deploy-multiarch-minor
  
docker-deploy-wayland-base-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"
    - export MINOR="${WAYLAND_BASE_MINOR}"
  variables:
    IMAGE_NAME: wayland-base
    IMAGE_NAME_32: arm32v7-debian-wayland-base
    IMAGE_NAME_64: arm64v8-debian-wayland-base
  stage: deploy-multiarch-minor

docker-deploy-shell-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"
    - export MINOR="${DEBIAN_SHELL_MINOR}"
  variables:
    IMAGE_NAME: debian-shell
    IMAGE_NAME_32: arm32v7-debian-shell
    IMAGE_NAME_64: arm64v8-debian-shell
  stage: deploy-multiarch-minor

docker-deploy-docker-compose-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"
    - export MINOR="${DOCKER_COMPOSE_MINOR}"
  variables:
    IMAGE_NAME: docker-compose
    IMAGE_NAME_32: arm32v7-debian-docker-compose
    IMAGE_NAME_64: arm64v8-debian-docker-compose
  stage: deploy-multiarch-minor
  
docker-deploy-qt5-wayland-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"
    - export MINOR="${QT5_WAYLAND_MINOR}"
  variables:
    IMAGE_NAME: qt5-wayland
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland
  stage: deploy-multiarch-minor
  
docker-deploy-qt5-wayland-examples-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"
  variables:
    IMAGE_NAME: qt5-wayland-examples
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland-examples
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland-examples
  stage: deploy-multiarch-minor

.docker-deploy-multiarch-patch:
  when: manual
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker manifest inspect ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} > /dev/null && true; RESULT=$?
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND}
  - (if [ ${RESULT} == 1 ] ; then docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}${DEBIAN_RELEASE_APPEND} ; else echo Image with this tag already exists. ; fi)

docker-deploy-base-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    IMAGE_NAME: debian
    IMAGE_NAME_32: arm32v7-debian-base
    IMAGE_NAME_64: arm64v8-debian-base
  stage: deploy-multiarch-patch
  
docker-deploy-wayland-base-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"
    - export MINOR="${WAYLAND_BASE_MINOR}"
    - export PATCH="${WAYLAND_BASE_PATCH}"
  variables:
    IMAGE_NAME: wayland-base
    IMAGE_NAME_32: arm32v7-debian-wayland-base
    IMAGE_NAME_64: arm64v8-debian-wayland-base
  stage: deploy-multiarch-patch

docker-deploy-shell-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"
    - export MINOR="${DEBIAN_SHELL_MINOR}"
    - export PATCH="${DEBIAN_SHELL_PATCH}"
  variables:
    IMAGE_NAME: debian-shell
    IMAGE_NAME_32: arm32v7-debian-shell
    IMAGE_NAME_64: arm64v8-debian-shell
  stage: deploy-multiarch-patch

docker-deploy-docker-compose-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"
    - export MINOR="${DOCKER_COMPOSE_MINOR}"
    - export PATCH="${DOCKER_COMPOSE_PATCH}"
  variables:
    IMAGE_NAME: docker-compose
    IMAGE_NAME_32: arm32v7-debian-docker-compose
    IMAGE_NAME_64: arm64v8-debian-docker-compose
  stage: deploy-multiarch-patch
  
docker-deploy-qt5-wayland-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"
    - export MINOR="${QT5_WAYLAND_MINOR}"
    - export PATCH="${QT5_WAYLAND_PATCH}"
  variables:
    IMAGE_NAME: qt5-wayland
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland
  stage: deploy-multiarch-patch
  
docker-deploy-qt5-wayland-examples-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"
  variables:
    IMAGE_NAME: qt5-wayland-examples
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland-examples
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland-examples
  stage: deploy-multiarch-patch

.docker-deploy-multiarch-patch-date:
  when: manual
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - export DATE=$(date +%Y%m%d)
  - docker manifest inspect ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} > /dev/null && true; RESULT=$?
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND}
  - (if [ ${RESULT} == 1 ] ; then docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}${DEBIAN_RELEASE_APPEND} ; else echo Image with this tag already exists. ; fi)

docker-deploy-base-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export DEBIAN_RELEASE_APPEND="-${DEBIAN_RELEASE}"
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    IMAGE_NAME: debian
    IMAGE_NAME_32: arm32v7-debian-base
    IMAGE_NAME_64: arm64v8-debian-base
  stage: deploy-multiarch-patch-date
  
docker-deploy-wayland-base-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export MAJOR="${WAYLAND_BASE_MAJOR}"
    - export MINOR="${WAYLAND_BASE_MINOR}"
    - export PATCH="${WAYLAND_BASE_PATCH}"
  variables:
    IMAGE_NAME: wayland-base
    IMAGE_NAME_32: arm32v7-debian-wayland-base
    IMAGE_NAME_64: arm64v8-debian-wayland-base
  stage: deploy-multiarch-patch-date

docker-deploy-shell-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export MAJOR="${DEBIAN_SHELL_MAJOR}"
    - export MINOR="${DEBIAN_SHELL_MINOR}"
    - export PATCH="${DEBIAN_SHELL_PATCH}"
  variables:
    IMAGE_NAME: debian-shell
    IMAGE_NAME_32: arm32v7-debian-shell
    IMAGE_NAME_64: arm64v8-debian-shell
  stage: deploy-multiarch-patch-date

docker-deploy-docker-compose-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export MAJOR="${DOCKER_COMPOSE_MAJOR}"
    - export MINOR="${DOCKER_COMPOSE_MINOR}"
    - export PATCH="${DOCKER_COMPOSE_PATCH}"
  variables:
    IMAGE_NAME: docker-compose
    IMAGE_NAME_32: arm32v7-debian-docker-compose
    IMAGE_NAME_64: arm64v8-debian-docker-compose
  stage: deploy-multiarch-patch-date
  
docker-deploy-qt5-wayland-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_MAJOR}"
    - export MINOR="${QT5_WAYLAND_MINOR}"
    - export PATCH="${QT5_WAYLAND_PATCH}"
  variables:
    IMAGE_NAME: qt5-wayland
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland
  stage: deploy-multiarch-patch-date
  
docker-deploy-qt5-wayland-examples-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export MAJOR="${QT5_WAYLAND_EXAMPLES_MAJOR}"
    - export MINOR="${QT5_WAYLAND_EXAMPLES_MINOR}"
    - export PATCH="${QT5_WAYLAND_EXAMPLES_PATCH}"
  variables:
    IMAGE_NAME: qt5-wayland-examples
    IMAGE_NAME_32: arm32v7-debian-qt5-wayland-examples
    IMAGE_NAME_64: arm64v8-debian-qt5-wayland-examples
  stage: deploy-multiarch-patch-date
